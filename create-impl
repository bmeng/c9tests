#!/usr/bin/env oo-ruby
# -*- ruby -*-

require 'rubygems'
require 'openshift-origin-common'
require 'openshift-origin-node'
require 'digest/md5'

MAXCHLD = 5

config = OpenShift::Config.new

cart = "diy-0.1"
hook_dir = File.join(config.get("CARTRIDGE_BASE_PATH"), cart, "info/hooks")

nchld = 0

srand

(1000...16000).each do |idx|

  name = "foo#{idx}"
  namespace = "bar#{idx}"
  uid = idx
  uuid = Digest::MD5.hexdigest("#{name}-#{namespace}").to_s

  puts "Creating: #{idx}"

  next if File.exists?(File.join(config.get("GEAR_BASE_DIR"), uuid))

  fork {
    sleep(rand)

    begin
      container = OpenShift::ApplicationContainer.new(uuid, uuid, uid,
                                                    name, name, namespace)
      container.create

      hook = File.join(hook_dir, 'configure')
      cmd = "#{hook} #{name} #{namespace} #{uuid}"
      out, err, rc = OpenShift::Utils::oo_spawn cmd
      if rc != 0
        raise Exception.new("#{cmd} = #{rc} #{out} #{err}")
      end

      hook = File.join(hook_dir, 'stop')
      cmd = "#{hook} #{name} #{namespace} #{uuid}"
      out, err, rc = OpenShift::Utils::oo_spawn cmd
      if rc != 0
        raise Exception.new("#{cmd} = #{rc} #{out} #{err}")
      end

    rescue => e
      $stderr.write("Exception: #{e.inspect}\n")
    end
  }
  nchld = nchld + 1
  if nchld >= MAXCHLD
    begin
      Process.wait
    rescue Errno::ECHILD
    end
    nchld = nchld -1
  end

end
